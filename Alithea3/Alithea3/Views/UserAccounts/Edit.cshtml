@using Alithea3.Models
@model Alithea3.Models.UserAccount

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    Dictionary<String, String> errors = new Dictionary<string, string>();
    if (ViewBag.Errors != null)
    {
        errors = ViewBag.Errors as Dictionary<string, string>;
    }

    var listRoles = ViewBag.listRoles as List<Role>;
    var listUserRoles = ViewBag.listUserRoles as List<UserAccountRole>;
}

<div class="row">
    <div class="col-md-8 mx-auto grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                @if (TempData["Error"] != null)
                {
                    <h4 class="text-danger">@TempData["Error"]</h4>
                }
                <h4 class="card-title">Tài khoản người dùng</h4>
                <p class="card-description">Chỉnh sửa</p>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.UserID)
                    @Html.HiddenFor(model => model.Password)
                    @Html.HiddenFor(model => model.Username)
                    @Html.HiddenFor(model => model.RoleNumber)
                    @Html.HiddenFor(model => model.Email)
                    <div class="form-group">
                        @Html.LabelFor(model => model.FullName)
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, errors.ContainsKey("FullName") ? errors["FullName"] : "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address)
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, errors.ContainsKey("Address") ? errors["Address"] : "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone)
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, errors.ContainsKey("Phone") ? errors["Phone"] : "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <img id="preview" src="@Html.DisplayFor(model => model.Image)" class="img-thumbnail" style="width: 100px" alt="Alternate Text" />
                        <div style="margin-top: 20px;">
                            @Html.LabelFor(model => model.Image, "New Image")
                            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            <div style="margin-top: 5px">
                                <button type="button" id="upload_widget" class="btn btn-primary">Upload files</button>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BirthDay)
                        @Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group hidden">
                        @Html.LabelFor(model => model.CreatAt, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @* <input type="date" class = "form-control" name="datepicker" value="@string.Format("{0:yyyy-MM-dd}", Model.CreatedAt)"/> *@
                            @Html.EditorFor(model => model.CreatAt, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.CreatAt, "", new { @class = "text-danger" })
                            @* <input type="text" name="birthday" value="@Model.CreatedAt.Date" /> *@
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status)
                        @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                    if (Model.admin == UserAccount.Decentralization.Admin)
                    {
                        @Html.HiddenFor(model => model.admin)
                    }
                    else
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.admin)
                            @Html.EnumDropDownListFor(model => model.admin, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.admin, "", new { @class = "text-danger" })
                        </div>
                    }
                    <div class="form-group">
                        <select class="form-control" id="sort">
                            <option value="-1">Vai trò</option>
                            @if (listRoles != null)
                            {
                                for (var i = 0; i < listRoles.Count; i++)
                                {
                                    <option value="@listRoles[i].RoleId">@listRoles[i].RoleName</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="form-group" style="margin-top: 20px; margin-bottom: 50px;">
                        <span class="control-label col-md-2">Vai trò đã chọn: </span>
                        <div class="col-md-10" id="listCat">
                          @if (listUserRoles != null)
                            {
                                for (int i = 0; i < listUserRoles.Count; i++)
                                {
                                    <div class="badge badge-info" id="item-@listUserRoles[i].RoleId">
                                        <input type="hidden" name="ints" value="@listUserRoles[i].RoleId" />@listUserRoles[i].Role.RoleName
                                        <i class="mdi mdi-backspace" onclick="delRole(@listUserRoles[i].RoleId)" style="margin-left: 10px;"></i>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <input type="submit" class="btn btn-gradient-primary mr-2" value="Cập nhật" />
                    <button type="button" class="btn btn-gradient-danger mr-3" data-toggle="modal" data-target="#myModal">
                        Xóa
                    </button>
                    <a class="btn btn-light" href="@Url.Action("Index")">
                        Hủy
                    </a>
                }
            </div>
        </div>
    </div>
</div>
<div class="modal" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Xóa?</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                Bạn có chắc muôn xóa tài khoản này
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                @using (Html.BeginForm("Delete/" + Model.UserID, "UserAccounts", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <input type="submit" value="Có" class="btn btn-default btn btn-danger" />
                }
                <button type="button" class="btn btn-primary" data-dismiss="modal">Không</button>
            </div>

        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var myWidget = cloudinary.createUploadWidget({
                cloudName: 'bangnguyen',
                uploadPreset: 'Alithea'}, (error, result) => {
                if (!error && result && result.event === "success") {
                    var imgLink = result.info.secure_url;
                    document.querySelector("input[name='Image']").value = imgLink;
                    var imgPreview = document.getElementById("preview");
                    imgPreview.src = imgLink;
                    imgPreview.classList.remove("hidden");
                }
            }
        )

        document.getElementById("upload_widget").addEventListener("click", function(){
            myWidget.open();
        }, false);
    </script>
    <script>
        function delRole(item) {
            var idDiv = "#item-" + item;
            $(idDiv).remove();
        }

        $("#sort").change(function () {
            console.log($(this).val() + " - " + $("#sort option:selected").text());
            console.log($("#listCat").text().includes($("#sort option:selected").text()));
            console.log($("#sort option:selected").text());
            console.log($(this).val());
            console.log($(this).val() > 0);
            if ($(this).val() > 0) {
                var text = '<div class="badge badge-info" id="item-' + $(this).val() + '"><input type="hidden" name="ints" value="' + $(this).val() + '" />' + $("#sort option:selected").text() + '<i class="mdi mdi-backspace" onclick="delRole(' + $(this).val() + ')" style="margin-left: 10px;"></i></div>';
                $("#listCat").append(text);
            }
        });
    </script>
}
