@using Alithea3.Models
@model IEnumerable<Alithea3.Models.Order>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    var totalPage = ((int?)ViewBag.TotalPage).Value;
    var currentPage = ((int?)ViewBag.CurrentPage).Value;
    var limit = ((int?)ViewBag.Limit).Value;
    var currentPara = "&start=" + ViewBag.Start + "&end=" + ViewBag.End;

    int indexSo = (currentPage - 1) * limit + 1;
}
<div class="row">
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body table-responsive">
                <h3>Tìm kiếm theo ngày</h3>
                <input type="hidden" id="startTime" value="@ViewBag.Start" />
                <input type="hidden" id="endTime" value="@ViewBag.End" />
                <input type="text" name="datefilter" value="" class="form-control" style="margin-bottom: 50px;" />
                <div id="curve_chart"></div>
                <h4 class="card-title" style="margin-top: 5%">Danh sách đơn hàng</h4>

                <table class="table" id="update-student">
                    <thead class="text-primary">
                        <tr>
                            <th>
                                #
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.RoleNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.FullName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Phone)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Quantity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TotalPrice)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OrderDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Status)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ShippedDate)
                            </th>
                            <th class="text-center d-none d-lg-table-cell">
                                Sửa
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {

                            <tr>
                                <td>
                                    <b class="text-small">@indexSo</b>
                                </td>
                                <td>
                                    <a href="/Orders/Details/@Html.DisplayFor(model => item.OrderID)" class="badge w-100 badge-gradient-primary w-100">
                                        @Html.DisplayFor(modelItem => item.RoleNumber)
                                    </a>
                                </td>
                                <td>
                                    <b class="text-small">@Html.DisplayFor(modelItem => item.FullName)</b>
                                </td>
                                <td>
                                    <b class="text-small">@Html.DisplayFor(modelItem => item.Phone)</b>
                                </td>
                                <td>
                                    <b class="text-small">@Html.DisplayFor(modelItem => item.Quantity)</b>
                                </td>
                                <td>
                                    <b class="text-small">@Html.DisplayFor(modelItem => item.TotalPrice)</b>
                                </td>
                                <td>
                                    <b class="text-small">@Html.DisplayFor(modelItem => item.OrderDate)</b>
                                </td>
                                <td class="d-none d-xl-table-cell ">
                                    <a class="badge w-100 @(item.Status == Order.StatusOrder.Finish ? "badge-gradient-primary"
                                                              : item.Status == Order.StatusOrder.Proccesing ? "badge-gradient-warning"
                                                                  : "badge-gradient-secondary")">
                                        @Html.DisplayFor(modelItem => item.Status)
                                    </a>
                                </td>
                                <td>
                                    <b class="text-small">@Html.DisplayFor(modelItem => item.ShippedDate)</b>
                                </td>
                                <td class="text-center d-none d-lg-table-cell">
                                    <a class="badge badge-warning" href="@Url.Action("Edit", "Orders", new {id = item.OrderID})">
                                        <span class="mdi mdi-pencil-box-outline"></span>
                                    </a>
                                </td>
                            </tr>
                            {
                                indexSo++;
                            }
                        }
                    </tbody>
                </table>
                @if (totalPage > 1)
                {
                    <nav aria-label="Page navigation" style="margin-top: 20px;">
                        <ul class="pagination">
                            @if (currentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="?page=1&limit=@(limit)@(currentPara)" aria-label="First">
                                        Đầu
                                    </a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" href="?page=@(currentPage-1)&limit=@(limit)@(currentPara)" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }
                            @if (currentPage > 2)
                            {
                                <li class="page-item"><a class="page-link" href="?page=@(currentPage-2)&limit=@(limit)@(currentPara)">@(currentPage - 2)</a></li>
                            }
                            @if (currentPage > 1)
                            {
                                <li class="page-item"><a class="page-link" href="?page=@(currentPage-1)&limit=@(limit)@(currentPara)">@(currentPage - 1)</a></li>
                            }
                            <li class="active page-item"><a class="page-link" href="?page=@(currentPage)&limit=@(limit)@(currentPara)">@currentPage</a></li>
                            @if (totalPage - currentPage > 0)
                            {
                                <li class="page-item"><a class="page-link" href="?page=@(currentPage+1)&limit=@(limit)@(currentPara)">@(currentPage + 1)</a></li>
                            }
                            @if (totalPage - currentPage > 1)
                            {
                                <li class="page-item"><a class="page-link" href="?page=@(currentPage+2)&limit=@(limit)@(currentPara)">@(currentPage + 2)</a></li>
                            }
                            @if (currentPage < totalPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="?page=@(currentPage+1)&limit=@(limit)@(currentPara)" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" href="?page=@totalPage&limit=@(limit)@(currentPara)" aria-label="Next">
                                        Cuối
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script type="text/javascript">
        $.ajax({
            url: "/Api/Orders", 
            type: "get", // chọn phương thức gửi là post
            data: {
                start: $('#startTime').val(),
                end: $('#endTime').val()
            },
            dataType: "json", // dữ liệu trả về dạng text
           
            success: function (result) {
                console.log(result);
                google.charts.load('current', {'packages':['line']});
                google.charts.setOnLoadCallback(drawChart);

                function drawChart() {

                    var data = new google.visualization.DataTable();
                    data.addColumn('date', 'Thời gian');
                    data.addColumn('number', 'Doanh thu thu được');

                    for (var i = 0; i < result.length; i++) {
                        data.addRow([new Date(result[i].datetime), result[i].price]);
                    }
                    var options = {
//                        chart: {
//                            title: 'Box Office Earnings in First Two Weeks of Opening',
//                            subtitle: 'in millions of dollars (USD)'
//                        },
//                        hAxis: {
//                            title: 'Time'
//                        },
//                        vAxis: {
//                            title: 'Popularity'
//                        },
//                        width: 900,
//                        height: 500
                    };

                    var chart = new google.charts.Line(document.getElementById('curve_chart'));

                    chart.draw(data, google.charts.Line.convertOptions(options));
                }

                $('#curve_chart').attr("style", "width: 900px; height: 500px; margin-left: 10%;");
            }
        });
    </script>
    <script type="text/javascript">
    $(function () {
        // init start time and end time;
        var startDate = new Date();
        startDate.setFullYear(startDate.getFullYear() - 1);
        var endDate = new Date();

        // check start and end parameter
        var startPara = getParameterFromUrl('start');
        if (startPara != null && startPara !== "") {
            startDate = new Date(startPara);
        }

        var endPara = getParameterFromUrl('end');
        if (endPara != null && endPara !== "") {
            endDate = new Date(endPara);
        }

        $('input[name="datefilter"]').daterangepicker({
            autoUpdateInput: true,
            startDate: startDate,
            endDate: endDate,
            locale: {
                cancelLabel: 'Clear'
            }
        });

        $('input[name="datefilter"]').on('apply.daterangepicker', function (ev, picker) {
            var start = picker.startDate.format('YYYY-MM-DD');
            var end = picker.endDate.format('YYYY-MM-DD');
            
            window.location.href = window.location.href.split('?')[0] + '?start=' + start + '&end=' + end;
        });
    
    });

    function getParameterFromUrl(parameter) {
        var url_string = window.location.href;
        var url = new URL(url_string);
        return url.searchParams.get(parameter);
    }</script>
}